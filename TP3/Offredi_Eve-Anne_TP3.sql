/*
R2.06 - TP3 - 21/02/22
Offredi Eve-Anne - Groupe B
---------------------------------
*/

-- Q1 : Pour chaque tuteur d apprenti designe par son nom (trie dans l’ordre alphabetique), afficher le nombre d’apprentis

SELECT nomEns, COUNT(etudApp)
FROM Enseignant, Apprenti
WHERE tuteurApp = idEns
GROUP BY nomEns
ORDER BY nomEns;

/*

NOMENS               COUNT(ETUDAPP)
-------------------- --------------
Baudont                           6
Fleurquin                         2
Kamp                              2
Lefevre                           2
Mannevy                           7
Ridard                            2
Tuffigo                           3

7 lignes sélectionnées. 
*/

-- Q2 : Pour chaque enseignant désigné par son nom, afficher le nombre d’apprentis (éventuellement 0) dans l’ordre décroissant.

SELECT nomEns, COUNT(etudApp)
FROM Enseignant
    LEFT JOIN Apprenti ON tuteurApp=idEns
GROUP BY nomEns
ORDER BY COUNT(etudApp) DESC;

/*
NOMENS               COUNT(ETUDAPP)
-------------------- --------------
Mannevy                           7
Baudont                           6
Tuffigo                           3
Kamp                              2
Ridard                            2
Lefevre                           2
Fleurquin                         2
Borne                             0
Kerbellec                         0
Adam                              0
Joucla                            0

NOMENS               COUNT(ETUDAPP)
-------------------- --------------
Volin                             0
Pham                              0
Naert                             0
Godin                             0
Roirand                           0
Lesueur                           0
Le Lain                           0
Merciol                           0
Le Sommer                         0

20 lignes sélectionnées. 
*/

-- Q3 : Afficher le plus grand nombre d’apprentis suivis par un tuteur.

SELECT MAX(nbApprentis)
FROM
    (
    SELECT tuteurApp, COUNT (etudApp) nbApprentis
    FROM Apprenti
    GROUP BY tuteurApp
    )
;

/*
MAX(NBAPPRENTIS)
----------------
               7
*/

-- Q4 : Afficher le(s) tuteur(s) ayant le plus grand nombre d’apprentis

SELECT tuteurApp
FROM Apprenti
GROUP BY tuteurApp
HAVING COUNT(etudApp) IN
    (
    SELECT MAX(COUNT(etudApp))
    FROM Apprenti
    GROUP BY etudApp
    )
;

/*
TUTEU
-----
MM
*/

-- Q5 : Afficher le nombre moyen d’apprentis par tuteur

SELECT COUNT(DISTINCT etudApp)/COUNT(DISTINCT tuteurApp)
FROM Apprenti
;

/*
COUNT(DISTINCTETUDAPP)/COUNT(DISTINCTTUTEURAPP)
-----------------------------------------------
                                     3,42857143
*/

-- Q6 : Afficher les tuteurs ayant un nombre d’apprentis strictement supérieur à la moyenne.

SELECT tuteurApp
FROM Apprenti
HAVING COUNT(etudApp) >
        (
        SELECT AVG(nbApprentiMoyen)
        FROM Apprenti,
                (
                SELECT COUNT(etudApp) nbApprentiMoyen
                FROM Apprenti
                GROUP BY etudApp
                )
        )
GROUP BY tuteurApp
;

/*
TUTEU
-----
HT
AR
PB
RF
MM
JFK
SL

7 lignes sélectionnées. 
*/

-- Q7 : Pour chaque département, afficher le nombre de lycéens recrutés en première année dans l’ordre décroissant.
SELECT depLycee, COUNT(idEtud)
FROM Etudiant
GROUP BY depLycee
ORDER BY COUNT(idEtud) DESC;

/*
  DEPLYCEE COUNT(IDETUD)
---------- -------------
        69             1
        37             1
        95             1
        86             1
        49             1
        53             1

17 lignes sélectionnées.
*/

-- Q8 : . Afficher le département de Bretagne qui a fourni le moins de lycéens recrutés en première année
SELECT depLycee
FROM Etudiant
WHERE depLycee IN (22, 29, 35, 56)
GROUP BY depLycee
HAVING COUNT(idEtud) = 
    (
        SELECT MIN(COUNT(idEtud))
        FROM Etudiant
        WHERE depLycee IN (22, 29, 35, 56)
        GROUP BY depLycee
    )
;

/*

  DEPLYCEE
----------
        22
*/

-- Q9 : Afficher les poursuites d’études concernant au moins 5 étudiants.

SELECT poursuiteEtudes
FROM Etudiant
GROUP BY poursuiteEtudes
HAVING COUNT(idEtud) >= 5;

/*
POURSUITEETUDES               
------------------------------

ENSIBS cyberdÃ©fense
Licence info Vannes
Travail
Licence Pro Vannes Delice
*/

-- Q10 : Afficher la poursuite d’études ayant le maximum d’étudiants apprentis

SELECT poursuiteEtudes
FROM Etudiant, Apprenti
WHERE etudApp = idEtud
GROUP BY poursuiteEtudes
HAVING COUNT(etudApp) =
    (
    SELECT MAX(COUNT(etudApp) )
    FROM Apprenti
    GROUP BY etudApp
    )
;

/*
POURSUITEETUDES               
------------------------------
CentraleSupelec
Licence Pro Vannes Cyber
IMT
Licence info Vannes
UTT
Licence info Brest
Licence Pro Vannes Delice

7 lignes sélectionnées.
*/

-- Q11 : Afficher les 3 poursuites d’études les plus représentées parmi les étudiants du parcours Développeurs d’Applications (DA).

